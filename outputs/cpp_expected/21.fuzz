#include <expected>
<fim_suffix>d::expected<const int *, std::error_code> get_result(bool status)
{
    if(status)
        return get_value();
    else
        return std::make_unexpected(make_error_code());
}

int main(int argc, char* argv[])
{
    auto value = get_result(true);
    std::cout << "Value : " << value.value() << "\n";

    auto error = get_result(false);
    try
    {
        std::cout << "Error : " << error.error().message() << "\n";
    }
    catch(const std::exception& ex)
    {
        std::cout << "Error occurred!\n";
    }
}

<fim_middle>
#include <iostream>
#include <system_error>

auto make_error_code()
{
    return std::error_code(1, std::generic_category());
}

const int get_value_result = 12;

std::expected<int, std::error_code> get_value()
{
    return get_value_result;
}

st