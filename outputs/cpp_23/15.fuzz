#include <iostream>
#include <new>
#include <optional>
#include <variant>
#include <concepts>
#include <ranges>

struct Employee
{
  void *secretDataPtr = nullptr;
  void * myAddressPtr = nullptr;
  Employee()
  {
    Employee* p = this;
    p->secretDataPtr = new int;
    secretDataPtr = p->secretDataPtr;
    myAddressPtr = (void*) &p;
  }
  ~Employee()
  {
    delete reinterpret_cast<int*>(secretDataPtr);
  }
  void printMyAddressPtr()
  {
    cout << "myAddressPtr: " << myAddressPtr << '\n';
  }
  template<typename _Tp>
  friend Employee operator> > ( const Employee& emp, _Tp& x);
};

Employee operator>> ( const Employee& emp,