#include <iostream>
#include <vector>
#include <memory>
#include <limits>
#include <new>
#include <optional>
#include <variant>
#include <concepts>
using namespace std;
struct Employee {
    void* secretDataPtr{nullptr};
    void* myAddressPtr{nullptr};
    Employee() {
        int* p{new int};
        secretDataPtr = p;
        myAddressPtr = (void*)&secretDataPtr;
    }
    ~Employee() {
        int* tmp = reinterpret_cast<int*>(secretDataPtr);
        delete tmp;
    }
    void printMyAddressPtr() {
        cout << "myAddressPtr: " << myAddressPtr << '\n';
    }
    template<typename _Tp> friend Employee operator>>(const Employee& emp, _Tp& x);
};
Employee operator>>(const Employee&