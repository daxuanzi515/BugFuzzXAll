from qiskit import QuantumCircuit

from qiskit.circuit.library import ClassicalRegister, QuantumRegister
from math import pi


q = QuantumRegister(2)

c = ClassicalRegister(2)

qc = QuantumCircuit(q, c)
qc.ry(pi / 2, q[0])
qc.ry(pi, q[1])
qc.cx(q[0], q[1])
qc.x(q[0])
qc.measure(q, c)

print(qc)

from qiskit import QuantumCircuit
from math import pi
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister
from qiskit import QuantumCircuit, ClassicalRegister, QuantumRegister


# ==================== ORACLE ====================
from qiskit.compiler import transpile
from qiskit import QuantumCircuit
class CustomFuzzAllException(Exception):
    pass
# get any the global variables (including the circuits)
global_vars = list(globals().keys())
# keep all those that are QuantumCircuit
circuits = [
    globals()[var] for var in global_vars
    if isinstance(globals()[var], QuantumCircuit)
]
try:
    # transpile them
    for circuit in circuits:
        for lvl in range(0, 4):
            res = transpile(circuit, optimization_level=lvl)
            # print(f"Optimization level {lvl} for circuit {circuit.name}")
            # print(res.draw())

    # conert them to qasm and back
    for circuit in circuits:
        # print(f"Converting to qasm and back for circuit {circuit.name}")
        QuantumCircuit().from_qasm_str(circuit.qasm())
except Exception as e:
    raise CustomFuzzAllException(e)
# ==================== ORACLE ====================
