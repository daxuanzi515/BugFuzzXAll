#include <stdlib.h>
#include <stdio.h>
struct __test
{
  int __x;
};
union __test
{
    int i; 
    struct __test t;
    void *p;  
};
int main()
{
    union __test t1;
    t1.i = 0x1234;
    printf("t1: %d\n", t1.i);
    t1.p = 0x5678;
    printf("t1: %p type: %s\n ", (int *)t1.p, "unknown");
    return (EXIT_SUCCESS);
}
 
#include <stdio.h>
union a {
  union a a1;
  union b b1;
};
typedef union b {
  int i;
  union a u;
} b;
int main(void)
{
    printf("sizeof(union a a1) %d", sizeof(a1));
  return (0);
}
 
 
 
 
#include <stdio.h>
union data_type{
  unsigned char bitfield;
  struct {
    unsigned char b0 :1;
    unsigned char b1 :3;
  };
};
int main(void)
{
    union data_type data;
    data.b0 = 1;
    data.b1 = 7;
    printf("0x%02X\n", data.bitfield);
    return (0);
}
 
#include <stdio.h>
union data_type{
  unsigned char bitfield;
  struct {
    unsigned char b0 :1;
    unsigned char b1 :3;
  };
};
int main(void)
{
    union data_type data;
    data.b0 = 1;
    data.b1 = 7;
    unsigned long long int u = data.bitfield
    printf("0x%02llX\n", u);  
    return (0);
}
 
 
 
/* The below snippet will print the