#include <stdlib.h>

#include <stdio.h>

typedef union {
	int a;
	long b;
} u;
int main()
{
	printf("\nThe size of union\n");
	printf("sizeof(u) = %d bytes\n", sizeof(u));
	printf("The size of int and long\n");
	printf("sizeof(int) = %d bytes\n", sizeof(int));
	printf("sizeof(long) = %d bytes\n", sizeof(long));
	u u1;
	 
	printf("\nu1.a = %d\n", u1.a);   
	printf("u1.b = %ld\n", u1.b);  
	 
	u u2 = 9;  
	printf("\nu2.a = %d\n", u2.a);   
	printf("u2.b = %ld\n", u2.b);  
	 
	u2 = 19;
	printf("\nu2.a = %d\n", u2.a);   
	printf("u2.b = %ld\n", u2.b);  
	 
	u2 = 129;
	printf("\nu2.a = %d\n", u2.a);   
	printf("u2.b = %ld\n", u2.b);  
	printf("sizeof(u2) = %ld bytes\n", sizeof(u2));
#if!defined(TEST_WITH_MAIN)
	printf("\nTEST_WITH_MAIN must be defined\n");
	return -1;
#endif
	int *x = malloc(sizeof(int));
	long *y = malloc(sizeof(long));
	u *p1 = malloc(sizeof(u));
	int b = -12;
	*x = 91;
	*y = b;
	*p1 = b;
	printf("\n*x = %d\n", *x);  
	printf("*y = %ld\n", *y);  
	printf("*p1 = %d\n", *p1);  
	printf("\n(a)sizeof(int) = %d bytes\n", sizeof(int));
	printf("(b)sizeof(long) = %d bytes\n", sizeof(long));
	printf("(c)sizeof(u) = %d bytes\n", sizeof(u));	
	free(x);
	free(y);
	free(p1);
	return 0;
}
