import java.lang.Object;
class SampleData {
    void write() { System.out.println("Write operation to SampleData is invoked!"); }
    void read() { System.out.println("Read operation to SampleData is invoked!"); }
}
class MultiThreadedData {
    SampleData data;
    public void read_synchronize(String s) { synchronized (data) { data.read(); } }
    public void write_synchronize() { synchronized (data) { data.write(); } }
}
public class SampleTest {
    public static void main(String [] args) {
        String s = "S";
        System.out.println("Please create a mutated program that modifies the previous generation");
        MultiThreadedData data = new MultiThreadedData();
        data.data = new SampleData();
        Thread t1 = new Thread(new Runnable() {
                public void run() { for(int i = 1; i <= 10; i++) { data.read_synchronize(s + i); System.out.println("Read operation with " + s + i + " is ended!"); } }    
            });
        Thread t2 = new Thread(new Runnable() {
                public void run() { for(int i = 1; i <= 3; i++) { data.write_synchronize(); System.out.println("Write operation is ended!"); } } 
            });
        t1.start();
        t2.start();
        try {
            t1.join();
            t2.join();
        } catch(InterruptedException ie) {} 
    }
}
/* Explain the output

This is the output of the original program:

Please create a very short program which combines synchronized with new Java features in a complex way
Write operation to SampleData is invoked!
Read operation to SampleData is invoked!
Read operation to SampleData is invoked!
Read operation with S1 is ended!
Read operation with S2 is ended!