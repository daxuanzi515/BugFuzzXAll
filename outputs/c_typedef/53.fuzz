#include <stdlib.h>
#include <stdio.h>
#define max(x,y)  (((x) > (y))? (x):(y)), (((x) < (y))? (x):(y))
#define min(x,y)  (((x) > (y))? (x):(y)), (((x) < (y))? (x):(y))
typedef struct Point
{
	double x;	 
	double y;	 
}Point_t;
typedef int (*FunctionPtr)(int, int);
int greater_than(int a, int b)
{
	return a > b;
}
int main()
{
	Point_t* p = (Point_t*)malloc(sizeof(Point_t));	 
	p->x = 4.0;
	p->y = 4.0;	 
	Point_t min_point;
	min_point.x = min(p->x, 3);
	min_point.y = min(p->y, 3);
	*(Point_t*)p = min_point;	 
	FunctionPtr greater = greater_than;
	Point_t max_point;
	if(greater(p->x, p->y))
	{
		max_point.x = p->x;
		max_point.y = p->y;	 
	}
	else
	{
		max(p->x, p->y);	 
		max_point.x = p->x;	 
		max_point.y = p->y;	 
	}
	free(p);	 
