#include <stdlib.h>
#include <stdio.h>
int main(int argc, char* argv[]) {
  int* x;
  x = (int*) malloc(10 * sizeof(int));
  int* y = (int*) calloc(10, sizeof(int));
  *x = 1; *y = 5;
  printf("x = %i, y = %i\n", *x, *y);
  free(x); free(y);
  return 0;
}
 
#include <stdio.h>
int main(int argc, char* argv[]) {
  printf("Hello Eli\n");
  return 0;
}
 
 
 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int main(int argc, char* argv[]) {
  const char* s = argv[1];
  char* buf = (char*) calloc(4, 1);
  int i;
  int size = strlen(s);
  for (i = 1; i < size; i++) {
    if (buf[0] == '\0') {
       
      fprintf(stdout, "%c\n", s[i]);
    } else {
      if (buf[1] == s[i]) {
         
        fprintf(stderr, "%c\n", s[i]);
      } else {
         
        fprintf(stdout, "%c%c\n", buf[0], s[i]);
         
        buf[0] = s[i];
      }
    }
  }
  free(buf);
  return 0;
}
 
 
 
#include <stdio.h>
#include <string.h>
typedef struct MyStruct {
    int x:5;
    int y:6;
    _Bool z:1;
} MyStruct;
 
int main(void)