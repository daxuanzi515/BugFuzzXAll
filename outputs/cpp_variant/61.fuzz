#include <variant>
<fim_suffix>  std::cout << "The variant holds the boolean " << val << "\n";
        }
        case 2: {
            std::cout << "The variant holds the double " << val.get<double>() << "\n";
        }
    }
}


<fim_middle>#include <iostream>
struct V {
    int i;
    float f;
    double d;
    void print() const { 
        std::cout << "The variant has the value " << d << "\n";
    }
};
V create() {
    V v = {10, 0.0f, 0.0};
    v.f = 32.24f;
    return v;
}
int main() 
{
    V v = create(); 
    for (auto x : v) {
        std::visit(
            [&](int val) { std::cout << "The variant holds the integer " << val << "\n";},
            [&](float val) { std::cout << "The variant holds the float " << val << "\n";},
            [&](double val) { std::cout << "The variant holds the double " << val << "\n";},
            [&](auto val) { std::cout << "The variant holds the wrong type." << "\n";});
    }
}
 
#include <variant>
#include <string>
#include <iostream>
std::variant<std::string,