#include <variant>
<fim_suffix>n 0;
}
<fim_middle>#include <iostream>
struct V {
    int i;
    float f;
    double d;
    void print() const { 
        std::cout << "The variant has the value " << d << "\n";
    }
};
V create() {
    V v = {10, 0.0f, 0.0};
    v.f = 32.24f;
    return v;
}
int main() 
{
    std::variant<int, float, double> v = create(); 
    v.print();
}
 
void print_value(V v) { std::cout << get<V::index_of<double>::value>(v) << "\n"; }
int main() 
{
    std::variant<int, float, double> v = create(); 
    std::visit(&print_value, v);
}
 
 
 
int main() 
{
    V v = create(); 
    if (holds_alternative<V::index_of<double>::value>(v)) std::cout << get<V::index_of<double>::value>(v) <<