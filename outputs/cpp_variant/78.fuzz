#include <variant>
_t<std::vector<double>, int, double, std::string>;
    auto res = std::visit([](auto&& arg) -> decltype(arg) {
        return arg;
    }, my_var);
}
 
using namespace std;

struct S {
    double d;
    S operator+(S const& rhs) const {
        return S{d + rhs.d};
    }
};

int main() {
     
     

     
     
     
     

     
     
}
<fim_middle>#include <iostream>
struct V {
    int i;
    float f;
    double d;
};
V create() {
    V v = {10, 0.0f, 0.0};
    v.f = 32.24f;
    return v;
}
int main()
{
    std::variant<int, float, double> v1 = 311;
    std::variant<int, float, double> v2 = 311.23f;
    std::variant<int, float,